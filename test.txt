def processPercentLine(line):
    """
    Remove MATLAB‐style comments:
      - Single‐line comments starting with '%'
      - Block comments delimited by '%{' ... '%}'
    Maintains state across lines via a function attribute `inBlock`.
    Returns the cleaned line (including a trailing newline if non‐blank), or
    an empty string if the line is entirely commented out.
    """
    # Initialize block state on first call
    if not hasattr(processPercentLine, "inBlock"):
        processPercentLine.inBlock = False

    # If we are inside a block comment, look for its end
    if processPercentLine.inBlock:
        end = line.find("%}")
        if end == -1:
            return ""  # still inside block
        # block ends here
        processPercentLine.inBlock = False
        # re‑process remainder of line after '%}'
        return processPercentLine(line[end + 2:])

    # Look for the start of a block comment
    start = line.find("%{")
    if start != -1:
        end = line.find("%}", start + 2)
        if end == -1:
            # block comment starts here and continues
            processPercentLine.inBlock = True
            return line[:start].rstrip() + ("\n" if line[:start].strip() else "")
        else:
            # block comment is entirely on one line
            cleaned = line[:start] + line[end + 2:]
            return processPercentLine(cleaned)

    # No block comment active—strip single‐line '%' comment
    idx = line.find("%")
    if idx != -1:
        # preserve code before '%'
        code = line[:idx].rstrip()
        return code + ("\n" if code else "")

    # No comments at all
    return line
